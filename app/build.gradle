plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    //Ref : https://developer.android.com/jetpack/androidx/releases/compose-kotlin#groovy
    alias(libs.plugins.jetbrains.compose)
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.ksp)
    alias(libs.plugins.room)
    alias(libs.plugins.kotlin.serialization)
}

android {
    compileSdk 36
    namespace = "app.prgghale.roomdb"
    buildFeatures {
        compose true
    }
    defaultConfig {
        applicationId = "app.prgghale.roomdb"
        minSdk 21
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }

    packagingOptions {
        resources {
            excludes += "META-INF/*"
            excludes += "META-INF/INDEX.LIST"
            excludes += "META-INF/*.kotlin_module"
            excludes += "META-INF/LICENSE"
            excludes += "META-INF/LICENSE.txt"
            excludes += "META-INF/NOTICE"
            excludes += "META-INF/io.netty.versions.properties"
            excludes += "META-INF/AL2.0"
            excludes += "META-INF/LGPL2.1"
        }
    }
}

room {
    schemaDirectory("$projectDir/schemas")
    generateKotlin = true
}

ksp {
    arg("KOIN_DEFAULT_MODULE", "true")
    arg("room.schemaLocation", "$projectDir/schemas")
}

dependencies {
    implementation(libs.kotlin.stdlib)

    implementation(libs.kotlinx.serialization.core)
    implementation(libs.kotlinx.serialization.json)
    implementation(libs.kotlinx.coroutines.android)

    implementation (libs.androidx.core.ktx)
    implementation(libs.androidx.activity.compose)

    implementation(compose.ui)
    implementation(compose.runtime)
    implementation(compose.foundation)
    implementation(compose.animation)
    implementation(compose.material)
    implementation(compose.material3)
    implementation(compose.materialIconsExtended)
    implementation(compose.components.resources)
    implementation(compose.components.uiToolingPreview)
    implementation(compose.preview)
    implementation(compose.uiTooling)

    // Compose Navigation
    implementation(libs.jetbrains.androidx.navigation.compose)
    implementation(libs.jetbrains.androidx.lifecycle.viewmodel)
    implementation(libs.jetbrains.androidx.lifecycle.viewmodel.compose)

    // Koin
    implementation(libs.koin.core)
    implementation(libs.koin.android)
    implementation(libs.koin.compose)
    implementation(libs.koin.compose.viewmodel)

    // RoomDatabase
    // Room components
    implementation(libs.androidx.room.runtime)
    implementation(libs.androidx.room.ktx)
    implementation(libs.sqlite.bundled)
    implementation project(':common')
    ksp(libs.androidx.room.compiler)
    implementation project(':shared')
    // Coil
    implementation(libs.coil)
    implementation(libs.coil.compose)

    // Lottie Animation
    implementation 'com.airbnb.android:lottie-compose:6.6.7'


    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
//    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
}